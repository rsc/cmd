// Code generated by "stringer -type ExprOp"; DO NOT EDIT.

package cc

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[Add-1]
	_ = x[AddEq-2]
	_ = x[Addr-3]
	_ = x[And-4]
	_ = x[AndAnd-5]
	_ = x[AndEq-6]
	_ = x[Arrow-7]
	_ = x[Call-8]
	_ = x[Cast-9]
	_ = x[CastInit-10]
	_ = x[Comma-11]
	_ = x[Cond-12]
	_ = x[Div-13]
	_ = x[DivEq-14]
	_ = x[Dot-15]
	_ = x[Eq-16]
	_ = x[EqEq-17]
	_ = x[Gt-18]
	_ = x[GtEq-19]
	_ = x[Index-20]
	_ = x[Indir-21]
	_ = x[Lsh-22]
	_ = x[LshEq-23]
	_ = x[Lt-24]
	_ = x[LtEq-25]
	_ = x[Minus-26]
	_ = x[Mod-27]
	_ = x[ModEq-28]
	_ = x[Mul-29]
	_ = x[MulEq-30]
	_ = x[Name-31]
	_ = x[Not-32]
	_ = x[NotEq-33]
	_ = x[Number-34]
	_ = x[Offsetof-35]
	_ = x[Or-36]
	_ = x[OrEq-37]
	_ = x[OrOr-38]
	_ = x[Paren-39]
	_ = x[Plus-40]
	_ = x[PostDec-41]
	_ = x[PostInc-42]
	_ = x[PreDec-43]
	_ = x[PreInc-44]
	_ = x[Rsh-45]
	_ = x[RshEq-46]
	_ = x[SizeofExpr-47]
	_ = x[SizeofType-48]
	_ = x[String-49]
	_ = x[Sub-50]
	_ = x[SubEq-51]
	_ = x[Twid-52]
	_ = x[VaArg-53]
	_ = x[Xor-54]
	_ = x[XorEq-55]
}

const _ExprOp_name = "AddAddEqAddrAndAndAndAndEqArrowCallCastCastInitCommaCondDivDivEqDotEqEqEqGtGtEqIndexIndirLshLshEqLtLtEqMinusModModEqMulMulEqNameNotNotEqNumberOffsetofOrOrEqOrOrParenPlusPostDecPostIncPreDecPreIncRshRshEqSizeofExprSizeofTypeStringSubSubEqTwidVaArgXorXorEq"

var _ExprOp_index = [...]uint8{0, 3, 8, 12, 15, 21, 26, 31, 35, 39, 47, 52, 56, 59, 64, 67, 69, 73, 75, 79, 84, 89, 92, 97, 99, 103, 108, 111, 116, 119, 124, 128, 131, 136, 142, 150, 152, 156, 160, 165, 169, 176, 183, 189, 195, 198, 203, 213, 223, 229, 232, 237, 241, 246, 249, 254}

func (i ExprOp) String() string {
	i -= 1
	if i < 0 || i >= ExprOp(len(_ExprOp_index)-1) {
		return "ExprOp(" + strconv.FormatInt(int64(i+1), 10) + ")"
	}
	return _ExprOp_name[_ExprOp_index[i]:_ExprOp_index[i+1]]
}
